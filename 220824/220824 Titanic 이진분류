{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"220824 Titanic 이진분류","provenance":[],"authorship_tag":"ABX9TyPC8ceMJGVlr1JHpx20wvTg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DcNu0K0vBYNC","executionInfo":{"status":"ok","timestamp":1661315942133,"user_tz":-540,"elapsed":347,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"8fe51f2f-6d37-4054-d9cf-bf300820a9b9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   survived  pclass     sex   age  sibsp  parch     fare embarked  class  \\\n","0         0       3    male  22.0      1      0   7.2500        S  Third   \n","1         1       1  female  38.0      1      0  71.2833        C  First   \n","2         1       3  female  26.0      0      0   7.9250        S  Third   \n","3         1       1  female  35.0      1      0  53.1000        S  First   \n","4         0       3    male  35.0      0      0   8.0500        S  Third   \n","\n","     who  adult_male deck  embark_town alive  alone  \n","0    man        True  NaN  Southampton    no  False  \n","1  woman       False    C    Cherbourg   yes  False  \n","2  woman       False  NaN  Southampton   yes   True  \n","3  woman       False    C  Southampton   yes  False  \n","4    man        True  NaN  Southampton    no   True  "],"text/html":["\n","  <div id=\"df-4186cf43-1694-4f31-b167-a867b19739b8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4186cf43-1694-4f31-b167-a867b19739b8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4186cf43-1694-4f31-b167-a867b19739b8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4186cf43-1694-4f31-b167-a867b19739b8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}],"source":["import pandas as pd\n","import seaborn as sns\n","\n","df = sns.load_dataset('titanic')\n","df.head()"]},{"cell_type":"code","source":["# nan값이 많은 deck 열을 삭제, embark와 겹치는 embark_town삭제\n","rdf = df.drop(['deck','embark_town'],axis=1)"],"metadata":{"id":"kVmBMkdhBfwS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# age 열에 나이 데이터가 없는 열 삭제 - 171개의 nan값 삭제\n","rdf = rdf.dropna(subset=['age'], how ='any',axis = 0)"],"metadata":{"id":"jIrf8RpXB6zN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# embarked 열의 Nan값을 승선도시 중에서 가장 많이 출현한 값으로 치환\n","most_freq = rdf['embarked'].value_counts(dropna=True).idxmax()\n","rdf['embarked'].fillna(most_freq, inplace = True)"],"metadata":{"id":"6XayAFQ7CZK6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rdf.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_MXuW-1QC4zp","executionInfo":{"status":"ok","timestamp":1661315945421,"user_tz":-540,"elapsed":14,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"d23731fb-dbb8-4dff-b314-c752c4c0a660"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 714 entries, 0 to 890\n","Data columns (total 13 columns):\n"," #   Column      Non-Null Count  Dtype   \n","---  ------      --------------  -----   \n"," 0   survived    714 non-null    int64   \n"," 1   pclass      714 non-null    int64   \n"," 2   sex         714 non-null    object  \n"," 3   age         714 non-null    float64 \n"," 4   sibsp       714 non-null    int64   \n"," 5   parch       714 non-null    int64   \n"," 6   fare        714 non-null    float64 \n"," 7   embarked    714 non-null    object  \n"," 8   class       714 non-null    category\n"," 9   who         714 non-null    object  \n"," 10  adult_male  714 non-null    bool    \n"," 11  alive       714 non-null    object  \n"," 12  alone       714 non-null    bool    \n","dtypes: bool(2), category(1), float64(2), int64(4), object(4)\n","memory usage: 63.6+ KB\n"]}]},{"cell_type":"code","source":["# 분석에 활용할 열 선택\n","ndf = rdf[['survived','pclass','sex','age','sibsp','parch','embarked']]\n","ndf.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"pWDcXW8sC573","executionInfo":{"status":"ok","timestamp":1661315946102,"user_tz":-540,"elapsed":18,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"9edddd48-c0c5-4837-9094-2067b3392e63"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   survived  pclass     sex   age  sibsp  parch embarked\n","0         0       3    male  22.0      1      0        S\n","1         1       1  female  38.0      1      0        C\n","2         1       3  female  26.0      0      0        S\n","3         1       1  female  35.0      1      0        S\n","4         0       3    male  35.0      0      0        S"],"text/html":["\n","  <div id=\"df-a3fe7c45-a646-4b4d-b629-5df0445c2679\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3fe7c45-a646-4b4d-b629-5df0445c2679')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a3fe7c45-a646-4b4d-b629-5df0445c2679 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a3fe7c45-a646-4b4d-b629-5df0445c2679');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["# 원핫인코딩 -범주형 데이터를 모형이 인식할 수 있도록 숫자형으로 변환\n","# ndf['sex'] 원핫인코딩\n","onehot_sex = pd.get_dummies(ndf[['sex','embarked']])\n","onehot_sex"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"E8HhGEOxDTHD","executionInfo":{"status":"ok","timestamp":1661315960426,"user_tz":-540,"elapsed":339,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"f90a2712-0dee-4347-b979-ccca72502e1b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sex_female  sex_male  embarked_C  embarked_Q  embarked_S\n","0             0         1           0           0           1\n","1             1         0           1           0           0\n","2             1         0           0           0           1\n","3             1         0           0           0           1\n","4             0         1           0           0           1\n","..          ...       ...         ...         ...         ...\n","885           1         0           0           1           0\n","886           0         1           0           0           1\n","887           1         0           0           0           1\n","889           0         1           1           0           0\n","890           0         1           0           1           0\n","\n","[714 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-98e4f786-a1a3-4966-ba4c-e45e94da66f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>embarked_C</th>\n","      <th>embarked_Q</th>\n","      <th>embarked_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>885</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>714 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98e4f786-a1a3-4966-ba4c-e45e94da66f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-98e4f786-a1a3-4966-ba4c-e45e94da66f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-98e4f786-a1a3-4966-ba4c-e45e94da66f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["# ndf + onhot_sex\n","ndf = pd.concat([ndf,onehot_sex],axis=1)\n","ndf.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"vzs9C_9GDpsB","executionInfo":{"status":"ok","timestamp":1661315962803,"user_tz":-540,"elapsed":512,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"cc451e3b-0a7a-44d2-907d-924e2758bf6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   survived  pclass     sex   age  sibsp  parch embarked  sex_female  \\\n","0         0       3    male  22.0      1      0        S           0   \n","1         1       1  female  38.0      1      0        C           1   \n","2         1       3  female  26.0      0      0        S           1   \n","3         1       1  female  35.0      1      0        S           1   \n","4         0       3    male  35.0      0      0        S           0   \n","\n","   sex_male  embarked_C  embarked_Q  embarked_S  \n","0         1           0           0           1  \n","1         0           1           0           0  \n","2         0           0           0           1  \n","3         0           0           0           1  \n","4         1           0           0           1  "],"text/html":["\n","  <div id=\"df-12af05a1-9556-4ae3-a71a-47e2f07ff6ef\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>embarked</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>embarked_C</th>\n","      <th>embarked_Q</th>\n","      <th>embarked_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>S</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12af05a1-9556-4ae3-a71a-47e2f07ff6ef')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-12af05a1-9556-4ae3-a71a-47e2f07ff6ef button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-12af05a1-9556-4ae3-a71a-47e2f07ff6ef');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["# #ndf + onhot_embarked\n","# onehot_embarked = pd.get_dummies(ndf['embarked'])\n","# ndf = pd.concat([ndf,onehot_embarked],axis=1)\n","# ndf.head()"],"metadata":{"id":"vcOr_aKqEBI4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ndf.drop(['sex','embarked'],axis = 1, inplace=True)\n","ndf.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Rlm6D-d3EOUu","executionInfo":{"status":"ok","timestamp":1661315967504,"user_tz":-540,"elapsed":360,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"891e0f34-a1bb-4aa0-a52f-3b2939eb4071"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   survived  pclass   age  sibsp  parch  sex_female  sex_male  embarked_C  \\\n","0         0       3  22.0      1      0           0         1           0   \n","1         1       1  38.0      1      0           1         0           1   \n","2         1       3  26.0      0      0           1         0           0   \n","3         1       1  35.0      1      0           1         0           0   \n","4         0       3  35.0      0      0           0         1           0   \n","\n","   embarked_Q  embarked_S  \n","0           0           1  \n","1           0           0  \n","2           0           1  \n","3           0           1  \n","4           0           1  "],"text/html":["\n","  <div id=\"df-f634f9ab-a78b-48af-bc0e-47493b07fd50\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>embarked_C</th>\n","      <th>embarked_Q</th>\n","      <th>embarked_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f634f9ab-a78b-48af-bc0e-47493b07fd50')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f634f9ab-a78b-48af-bc0e-47493b07fd50 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f634f9ab-a78b-48af-bc0e-47493b07fd50');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["ndf.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"kV4U2OG7IYPn","executionInfo":{"status":"ok","timestamp":1661315971845,"user_tz":-540,"elapsed":347,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"73c2dd57-63ec-45bb-c613-e587bc299849"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   survived  pclass   age  sibsp  parch  sex_female  sex_male  embarked_C  \\\n","0         0       3  22.0      1      0           0         1           0   \n","1         1       1  38.0      1      0           1         0           1   \n","2         1       3  26.0      0      0           1         0           0   \n","3         1       1  35.0      1      0           1         0           0   \n","4         0       3  35.0      0      0           0         1           0   \n","\n","   embarked_Q  embarked_S  \n","0           0           1  \n","1           0           0  \n","2           0           1  \n","3           0           1  \n","4           0           1  "],"text/html":["\n","  <div id=\"df-988603d9-5a23-4975-bd22-5c7738629c05\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>embarked_C</th>\n","      <th>embarked_Q</th>\n","      <th>embarked_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-988603d9-5a23-4975-bd22-5c7738629c05')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-988603d9-5a23-4975-bd22-5c7738629c05 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-988603d9-5a23-4975-bd22-5c7738629c05');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["y= ndf[['survived']]"],"metadata":{"id":"SBDMrWpgIzuf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ndf = ndf.drop(['survived'],axis=1,inplace=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":323},"id":"E3eDa9dDGWLm","executionInfo":{"status":"error","timestamp":1661316002121,"user_tz":-540,"elapsed":400,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"58b589c3-ecd3-45ea-95e8-d4ee4ff49588"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-82-0f0ec3760be1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mndf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mndf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'survived'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    309\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstacklevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    310\u001b[0m                 )\n\u001b[0;32m--> 311\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    312\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    313\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4911\u001b[0m             \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4912\u001b[0m             \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4913\u001b[0;31m             \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4914\u001b[0m         )\n\u001b[1;32m   4915\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4148\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4149\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4150\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4151\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4152\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors)\u001b[0m\n\u001b[1;32m   4183\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4184\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4185\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4186\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnew_axis\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6015\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6016\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6017\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{labels[mask]} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6018\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6019\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['survived'] not found in axis\""]}]},{"cell_type":"code","source":["X = ndf"],"metadata":{"id":"DkKTK3psHa1J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import preprocessing\n","X = preprocessing.StandardScaler().fit(X).transform(X)"],"metadata":{"id":"_d3fzD5sEaOg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, x_test, y_train, y_test = train_test_split(X,y,\n","                                                    test_size=0.2)"],"metadata":{"id":"TmauHk9PFE0q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, x_val, y_train, y_val = train_test_split(X_train,y_train,\n","                                                    test_size=0.3)"],"metadata":{"id":"pmDAL1qFFGL_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape,x_val.shape,x_test.shape,\"\\n\",\n","      y_train.shape,y_val.shape,y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"roYbkvL3Jvt2","executionInfo":{"status":"ok","timestamp":1661316129888,"user_tz":-540,"elapsed":329,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"a62e2d86-cd39-4baf-9977-882ffb1323e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(399, 9) (172, 9) (143, 9) \n"," (399, 1) (172, 1) (143, 1)\n"]}]},{"cell_type":"code","source":["  model = Sequential()\n","  model.add(Dense(64, activation = 'relu', input_shape = (9,)))\n","  model.add(Dense(32, activation = 'relu'))\n","  model.add(Dense(1))"],"metadata":{"id":"Fq2m-j63KPYx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","model = Sequential()\n","\n","model.add(Dense(64, activation = 'relu', input_shape = (9,)))\n","model.add(Dense(16,activation = 'relu'))\n","model.add(Dense(1, activation = 'sigmoid'))\n","model.compile(optimizer = 'adam', loss = 'binary_crossentropy',\n","              metrics = ['acc'])"],"metadata":{"id":"JOqVH-KAGs5u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model.fit(X_train, y_train,\n","                    shuffle = True,\n","                    epochs =50,\n","                    validation_data = (x_val, y_val))\n","model.evaluate(x_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4tZiwQPDIdNu","executionInfo":{"status":"ok","timestamp":1661316440399,"user_tz":-540,"elapsed":4867,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"d92201c3-00a5-4463-df93-c2eba33716ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","13/13 [==============================] - 1s 8ms/step - loss: 0.6961 - acc: 0.5188 - val_loss: 0.5897 - val_acc: 0.7442\n","Epoch 2/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.5916 - acc: 0.7444 - val_loss: 0.5036 - val_acc: 0.8256\n","Epoch 3/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.5363 - acc: 0.7794 - val_loss: 0.4499 - val_acc: 0.8256\n","Epoch 4/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.5058 - acc: 0.7794 - val_loss: 0.4201 - val_acc: 0.8198\n","Epoch 5/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4871 - acc: 0.7845 - val_loss: 0.4025 - val_acc: 0.8198\n","Epoch 6/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.4731 - acc: 0.7870 - val_loss: 0.3907 - val_acc: 0.8198\n","Epoch 7/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4603 - acc: 0.7945 - val_loss: 0.3834 - val_acc: 0.8256\n","Epoch 8/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.4501 - acc: 0.7870 - val_loss: 0.3792 - val_acc: 0.8314\n","Epoch 9/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.4426 - acc: 0.7920 - val_loss: 0.3745 - val_acc: 0.8314\n","Epoch 10/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.4367 - acc: 0.8020 - val_loss: 0.3693 - val_acc: 0.8372\n","Epoch 11/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.4310 - acc: 0.8095 - val_loss: 0.3685 - val_acc: 0.8430\n","Epoch 12/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4272 - acc: 0.8095 - val_loss: 0.3715 - val_acc: 0.8605\n","Epoch 13/50\n","13/13 [==============================] - 0s 7ms/step - loss: 0.4226 - acc: 0.8296 - val_loss: 0.3687 - val_acc: 0.8488\n","Epoch 14/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4192 - acc: 0.8271 - val_loss: 0.3669 - val_acc: 0.8547\n","Epoch 15/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4165 - acc: 0.8246 - val_loss: 0.3635 - val_acc: 0.8547\n","Epoch 16/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4131 - acc: 0.8296 - val_loss: 0.3641 - val_acc: 0.8547\n","Epoch 17/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4105 - acc: 0.8321 - val_loss: 0.3688 - val_acc: 0.8547\n","Epoch 18/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4084 - acc: 0.8321 - val_loss: 0.3664 - val_acc: 0.8547\n","Epoch 19/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.4065 - acc: 0.8421 - val_loss: 0.3640 - val_acc: 0.8547\n","Epoch 20/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4064 - acc: 0.8321 - val_loss: 0.3660 - val_acc: 0.8663\n","Epoch 21/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.4027 - acc: 0.8296 - val_loss: 0.3659 - val_acc: 0.8663\n","Epoch 22/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.4025 - acc: 0.8321 - val_loss: 0.3618 - val_acc: 0.8663\n","Epoch 23/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.4002 - acc: 0.8396 - val_loss: 0.3642 - val_acc: 0.8547\n","Epoch 24/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3983 - acc: 0.8396 - val_loss: 0.3607 - val_acc: 0.8721\n","Epoch 25/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.3966 - acc: 0.8346 - val_loss: 0.3601 - val_acc: 0.8605\n","Epoch 26/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.3953 - acc: 0.8346 - val_loss: 0.3602 - val_acc: 0.8721\n","Epoch 27/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3940 - acc: 0.8421 - val_loss: 0.3590 - val_acc: 0.8605\n","Epoch 28/50\n","13/13 [==============================] - 0s 7ms/step - loss: 0.3928 - acc: 0.8371 - val_loss: 0.3601 - val_acc: 0.8663\n","Epoch 29/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.3898 - acc: 0.8371 - val_loss: 0.3639 - val_acc: 0.8721\n","Epoch 30/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3887 - acc: 0.8396 - val_loss: 0.3605 - val_acc: 0.8605\n","Epoch 31/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3881 - acc: 0.8396 - val_loss: 0.3572 - val_acc: 0.8663\n","Epoch 32/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3875 - acc: 0.8371 - val_loss: 0.3649 - val_acc: 0.8430\n","Epoch 33/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3860 - acc: 0.8396 - val_loss: 0.3650 - val_acc: 0.8663\n","Epoch 34/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.3853 - acc: 0.8346 - val_loss: 0.3656 - val_acc: 0.8547\n","Epoch 35/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3821 - acc: 0.8421 - val_loss: 0.3668 - val_acc: 0.8721\n","Epoch 36/50\n","13/13 [==============================] - 0s 7ms/step - loss: 0.3802 - acc: 0.8396 - val_loss: 0.3623 - val_acc: 0.8488\n","Epoch 37/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3804 - acc: 0.8471 - val_loss: 0.3594 - val_acc: 0.8605\n","Epoch 38/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.3803 - acc: 0.8396 - val_loss: 0.3611 - val_acc: 0.8605\n","Epoch 39/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3793 - acc: 0.8471 - val_loss: 0.3585 - val_acc: 0.8605\n","Epoch 40/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3795 - acc: 0.8471 - val_loss: 0.3668 - val_acc: 0.8547\n","Epoch 41/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.3777 - acc: 0.8421 - val_loss: 0.3606 - val_acc: 0.8721\n","Epoch 42/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.3744 - acc: 0.8471 - val_loss: 0.3611 - val_acc: 0.8605\n","Epoch 43/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3745 - acc: 0.8446 - val_loss: 0.3661 - val_acc: 0.8605\n","Epoch 44/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3732 - acc: 0.8471 - val_loss: 0.3600 - val_acc: 0.8547\n","Epoch 45/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3727 - acc: 0.8446 - val_loss: 0.3620 - val_acc: 0.8547\n","Epoch 46/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.3720 - acc: 0.8446 - val_loss: 0.3586 - val_acc: 0.8547\n","Epoch 47/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.3722 - acc: 0.8471 - val_loss: 0.3659 - val_acc: 0.8430\n","Epoch 48/50\n","13/13 [==============================] - 0s 6ms/step - loss: 0.3691 - acc: 0.8471 - val_loss: 0.3615 - val_acc: 0.8547\n","Epoch 49/50\n","13/13 [==============================] - 0s 5ms/step - loss: 0.3698 - acc: 0.8446 - val_loss: 0.3664 - val_acc: 0.8430\n","Epoch 50/50\n","13/13 [==============================] - 0s 4ms/step - loss: 0.3678 - acc: 0.8471 - val_loss: 0.3657 - val_acc: 0.8663\n","5/5 [==============================] - 0s 3ms/step - loss: 0.4771 - acc: 0.7902\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.47712984681129456, 0.7902097702026367]"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["model.evaluate(y_test)"],"metadata":{"id":"mg4Zew0zKxYe","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"error","timestamp":1661317988727,"user_tz":-540,"elapsed":451,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"19f16857-7a9e-49fe-d2d4-9d5da202cce0"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-b7b49ccafaa8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevaluate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'model' is not defined"]}]},{"cell_type":"code","source":["y_hat = model.predict(x_test)"],"metadata":{"id":"SiuubtxLK8HG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_hat[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lO88-IDmIhGx","executionInfo":{"status":"ok","timestamp":1661316460112,"user_tz":-540,"elapsed":431,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"9a64ca52-ca47-4426-daf5-95c68e354c2a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.06992829], dtype=float32)"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["#threshold\n","threshold = 0.5\n","y_hat[0] >= threshold"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i2KrxrfdIiYP","executionInfo":{"status":"ok","timestamp":1661316461678,"user_tz":-540,"elapsed":5,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"2172001f-bc3a-4aab-96bf-2d17ed75fa26"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([False])"]},"metadata":{},"execution_count":109}]},{"cell_type":"code","source":["result=[]\n","for i in y_hat:\n","  if i >= threshold:\n","    result.append(1)\n","  else:\n","    result.append(0)\n"],"metadata":{"id":"5g9Lmm6aIqft"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, confusion_matrix\n","print(classification_report(y_test,result))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ND84JLr8Iqim","executionInfo":{"status":"ok","timestamp":1661316464747,"user_tz":-540,"elapsed":4,"user":{"displayName":"박준석","userId":"17148972682824707028"}},"outputId":"a38c7e45-f04b-4364-bdba-a60ad07eabfa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.81      0.85      0.83        85\n","           1       0.76      0.71      0.73        58\n","\n","    accuracy                           0.79       143\n","   macro avg       0.78      0.78      0.78       143\n","weighted avg       0.79      0.79      0.79       143\n","\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"ItcrOYHVIqmR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"MrBmems-Iqrf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"1nmFInW-IquK"},"execution_count":null,"outputs":[]}]}